// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Validating rule docs type-annotation-spacing.md code examples ESLint output snapshot 1`] = `
"Incorrect

let foo:string = "bar";
       ~ Expected a space after the ':'.
let foo :string = "bar";
        ~ Expected a space after the ':'.
        ~ Unexpected space before the ':'.
let foo : string = "bar";
        ~ Unexpected space before the ':'.

function foo():string {}
              ~ Expected a space after the ':'.
function foo() :string {}
               ~ Expected a space after the ':'.
               ~ Unexpected space before the ':'.
function foo() : string {}
               ~ Unexpected space before the ':'.

class Foo {
    name:string;
        ~ Expected a space after the ':'.
}

class Foo {
    name :string;
         ~ Expected a space after the ':'.
         ~ Unexpected space before the ':'.
}

class Foo {
    name : string;
         ~ Unexpected space before the ':'.
}

type Foo = ()=>{};
             ~~ Expected a space after the '=>'.
             ~~ Expected a space before the '=>'.
type Foo = () =>{};
              ~~ Expected a space after the '=>'.
type Foo = ()=> {};
             ~~ Expected a space before the '=>'.
"
`;

exports[`Validating rule docs type-annotation-spacing.md code examples ESLint output snapshot 2`] = `
"Correct

let foo: string = "bar";

function foo(): string {}

class Foo {
    name: string;
}

type Foo = () => {};
"
`;

exports[`Validating rule docs type-annotation-spacing.md code examples ESLint output snapshot 3`] = `
"Incorrect
Options: { "before": false, "after": true }

let foo:string = "bar";
       ~ Expected a space after the ':'.
let foo :string = "bar";
        ~ Expected a space after the ':'.
        ~ Unexpected space before the ':'.
let foo : string = "bar";
        ~ Unexpected space before the ':'.

function foo():string {}
              ~ Expected a space after the ':'.
function foo() :string {}
               ~ Expected a space after the ':'.
               ~ Unexpected space before the ':'.
function foo() : string {}
               ~ Unexpected space before the ':'.

class Foo {
    name:string;
        ~ Expected a space after the ':'.
}

class Foo {
    name :string;
         ~ Expected a space after the ':'.
         ~ Unexpected space before the ':'.
}

class Foo {
    name : string;
         ~ Unexpected space before the ':'.
}

type Foo = ()=>{};
             ~~ Expected a space after the '=>'.
type Foo = () =>{};
              ~~ Expected a space after the '=>'.
              ~~ Unexpected space before the '=>'.
type Foo = () => {};
              ~~ Unexpected space before the '=>'.
"
`;

exports[`Validating rule docs type-annotation-spacing.md code examples ESLint output snapshot 4`] = `
"Correct
Options: { "before": false, "after": true }

let foo: string = "bar";

function foo(): string {}

class Foo {
    name: string;
}

type Foo = ()=> {};
"
`;

exports[`Validating rule docs type-annotation-spacing.md code examples ESLint output snapshot 5`] = `
"Incorrect
Options: { "before": true, "after": true }

let foo: string = "bar";
       ~ Expected a space before the ':'.
let foo:string = "bar";
       ~ Expected a space after the ':'.
       ~ Expected a space before the ':'.
let foo :string = "bar";
        ~ Expected a space after the ':'.

function foo(): string {}
              ~ Expected a space before the ':'.
function foo():string {}
              ~ Expected a space after the ':'.
              ~ Expected a space before the ':'.
function foo() :string {}
               ~ Expected a space after the ':'.

class Foo {
    name: string;
        ~ Expected a space before the ':'.
}

class Foo {
    name:string;
        ~ Expected a space after the ':'.
        ~ Expected a space before the ':'.
}

class Foo {
    name :string;
         ~ Expected a space after the ':'.
}

type Foo = ()=>{};
             ~~ Expected a space after the '=>'.
             ~~ Expected a space before the '=>'.
type Foo = () =>{};
              ~~ Expected a space after the '=>'.
type Foo = ()=> {};
             ~~ Expected a space before the '=>'.
"
`;

exports[`Validating rule docs type-annotation-spacing.md code examples ESLint output snapshot 6`] = `
"Correct
Options: { "before": true, "after": true }

let foo : string = "bar";

function foo() : string {}

class Foo {
    name : string;
}

type Foo = () => {};
"
`;

exports[`Validating rule docs type-annotation-spacing.md code examples ESLint output snapshot 7`] = `
"Incorrect
Options: {"before":false,"after":false,"overrides":{"colon":{"before":true,"after":true}}}

let foo: string = "bar";
       ~ Expected a space before the ':'.
let foo:string = "bar";
       ~ Expected a space after the ':'.
       ~ Expected a space before the ':'.
let foo :string = "bar";
        ~ Expected a space after the ':'.

function foo(): string {}
              ~ Expected a space before the ':'.
function foo():string {}
              ~ Expected a space after the ':'.
              ~ Expected a space before the ':'.
function foo() :string {}
               ~ Expected a space after the ':'.

class Foo {
    name: string;
        ~ Expected a space before the ':'.
}

class Foo {
    name:string;
        ~ Expected a space after the ':'.
        ~ Expected a space before the ':'.
}

class Foo {
    name :string;
         ~ Expected a space after the ':'.
}

type Foo = () =>{};
              ~~ Unexpected space before the '=>'.
type Foo = ()=> {};
             ~~ Unexpected space after the '=>'.
type Foo = () => {};
              ~~ Unexpected space after the '=>'.
              ~~ Unexpected space before the '=>'.
"
`;

exports[`Validating rule docs type-annotation-spacing.md code examples ESLint output snapshot 8`] = `
"Correct
Options: {"before":false,"after":false,"overrides":{"colon":{"before":true,"after":true}}}

let foo : string = "bar";

function foo() : string {}

class Foo {
    name : string;
}

type Foo = {
    name : (name : string)=>string;
}

type Foo = ()=>{};
"
`;

exports[`Validating rule docs type-annotation-spacing.md code examples ESLint output snapshot 9`] = `
"Incorrect
Options: {"before":false,"after":false,"overrides":{"arrow":{"before":true,"after":true}}}

let foo: string = "bar";
       ~ Unexpected space after the ':'.
let foo : string = "bar";
        ~ Unexpected space after the ':'.
        ~ Unexpected space before the ':'.
let foo :string = "bar";
        ~ Unexpected space before the ':'.

function foo(): string {}
              ~ Unexpected space after the ':'.
function foo():string {}
function foo() :string {}
               ~ Unexpected space before the ':'.

class Foo {
    name: string;
        ~ Unexpected space after the ':'.
}

class Foo {
    name : string;
         ~ Unexpected space after the ':'.
         ~ Unexpected space before the ':'.
}

class Foo {
    name :string;
         ~ Unexpected space before the ':'.
}

type Foo = ()=>{};
             ~~ Expected a space after the '=>'.
             ~~ Expected a space before the '=>'.
type Foo = () =>{};
              ~~ Expected a space after the '=>'.
type Foo = ()=> {};
             ~~ Expected a space before the '=>'.
"
`;

exports[`Validating rule docs type-annotation-spacing.md code examples ESLint output snapshot 10`] = `
"Correct
Options: {"before":false,"after":false,"overrides":{"arrow":{"before":true,"after":true}}}

let foo:string = "bar";

function foo():string {}

class Foo {
    name:string;
}

type Foo = () => {};
"
`;
